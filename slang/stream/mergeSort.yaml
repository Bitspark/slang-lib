# Merge sort
---
in:
  type: stream
  stream:
    type: number
out:
  type: stream
  stream:
    type: number

operators:
  # Packer
  packer:
    operator: .pack
    generics:
      itemType:
        type: number
  # Merger
  merger:
    operator: slang.take
    generics:
      itemType:
        type: number
  # Reducer
  reducer:
    operator: slang.reduce
    generics:
      itemType:
        type: stream
        stream:
          type: number
    properties:
      emptyValue: []
  # Comparator
  comparator:
    operator: slang.eval
    generics:
      paramsMap:
        type: map
        map:
          a:
            type: number
          b:
            type: number
    properties:
      expression: a <= b

connections:
  .(:
    - (packer
  packer):
    - .(reducer
  reducer.selection)..a.:
    - true.(merger
  reducer.selection)..b.:
    - false.(merger
  merger.compare)..true:
    - a(comparator
  merger.compare)..false:
    - b(comparator
  comparator):
    - .(merger.compare
  merger):
    - .(reducer.selection
  reducer):
    - )
