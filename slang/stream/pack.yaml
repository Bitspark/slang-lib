# Pack: Yields streams for each incoming element containing that element
---
services:
  main:
    in:
      type: generic
      generic: itemType
    out:
      type: stream
      stream:
        type: generic
        generic: itemType

operators:
  # Loop
  loop:
    operator: slang.loop
    generics:
      itemType:
        type: generic
        generic: itemType
      stateType:
        type: generic
        generic: itemType
  # False
  false:
    operator: slang.const
    generics:
      valueType:
        type: boolean
    properties:
      value: false

connections:
  (:
  - (loop
  loop.iteration)~:
  - (false
  - ~.state(loop.iteration
  loop.iteration):
  - )
  false):
  - ~.continue(loop.iteration
