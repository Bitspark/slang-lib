services:
  main:
    in:
      type: stream
      stream:
        type: generic
        generic: itemType
    out:
      type: stream
      stream:
        type: generic
        generic: itemType
operators:
  const:
    operator: slang.const
    properties:
      value: []
    generics:
      valueType:
        type: stream
        stream:
          type: generic
          generic: itemType
  eval:
    operator: slang.eval
    properties:
      expression: x-1
      variables:
      - x
  eval1:
    operator: slang.eval
    properties:
      expression: x-1
      variables:
      - x
  eval2:
    operator: slang.eval
    properties:
      expression: x > 0
      variables:
      - x
  eval3:
    operator: slang.eval
    properties:
      expression: x>0
      variables:
      - x
  isolatedLoop:
    operator: slang.isolatedLoop
    generics:
      inType:
        type: stream
        stream:
          type: generic
          generic: itemType
      itemType:
        type: stream
        stream:
          type: generic
          generic: itemType
      outType:
        type: primitive
      stateType:
        type: map
        map:
          index:
            type: number
      valueType:
        type: generic
        generic: itemType
  length:
    operator: slang.stream.length
    generics:
      itemType:
        type: generic
        generic: itemType
  repeat:
    operator: slang.stream.repeat
    generics:
      itemType:
        type: stream
        stream:
          type: generic
          generic: itemType
  switch:
    operator: slang.switch
    properties:
      cases:
      - true
      - false
    generics:
      inType:
        type: map
        map:
          items:
            type: stream
            stream:
              type: generic
              generic: itemType
          length:
            type: number
      outType:
        type: stream
        stream:
          type: generic
          generic: itemType
      selectType:
        type: boolean
  takeNth:
    operator: slang.stream.takeNth
    properties:
      default: null
    generics:
      itemType:
        type: generic
        generic: itemType
connections:
  (:
  - (length
  - item.items(switch
  const):
  - (switch.false
  eval):
  - stateInit.index(isolatedLoop
  eval1):
  - ~.state.index(isolatedLoop.delegate
  eval2):
  - ~.continue(isolatedLoop.delegate
  eval3):
  - select(switch
  isolatedLoop)values:
  - (switch.true
  isolatedLoop.delegate)delegateInit:
  - value(repeat
  isolatedLoop.delegate)loop.~.index:
  - x(eval1
  - triggers.~(repeat
  - index(takeNth
  - x(eval2
  length):
  - x(eval3
  - item.length(switch
  repeat)~:
  - items(takeNth
  switch):
  - )
  switch.false)length:
  - (const
  switch.true)items:
  - delegateInit(isolatedLoop
  switch.true)length:
  - x(eval
  takeNth)item:
  - ~.value(isolatedLoop.delegate
