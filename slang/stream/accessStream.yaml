services:
  main:
    in:
      type: map
      map:
        key:
          type: generic
          generic: keyType
        stream:
          type: stream
          stream:
            type: map
            map:
              key:
                type: generic
                generic: keyType
              value:
                type: generic
                generic: valueType
    out:
      type: stream
      stream:
        type: generic
        generic: valueType
operators:
  filter:
    operator: slang.fork
    generics:
      itemType:
        type: generic
        generic: valueType
  isEntry:
    operator: slang.eval
    properties:
      expression: key == currentKey
      variables:
      - key
      - currentKey
  keyRepeater:
    operator: .repeat
    generics:
      itemType:
        type: generic
        generic: keyType
connections:
  filter)true:
  - )
  isEntry):
  - ~.select(filter
  key(:
  - value(keyRepeater
  keyRepeater)~:
  - key(isEntry
  stream(:
  - triggers(keyRepeater
  stream.~.key(:
  - currentKey(isEntry
  stream.~.value(:
  - ~.item(filter
