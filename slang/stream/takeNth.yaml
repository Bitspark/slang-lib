# Take-Nth: outputs the n-th element of a stream
---
in:
  type: map
  map:
    items:
      type: stream
      stream:
        type: number
    index:
      type: number
out:
  type: map
  map:
    item:
      type: number
    others:
      type: stream
      stream:
        type: number
properties:
  - default

operators:
  # Default (const)
  default:
    operator: slang.const
    generics:
      valueType:
        type: number
    properties:
      value: $default
  # MinusOne (eval)
  minusOne:
    operator: slang.eval
    generics:
      paramsMap:
        type: map
        map:
          x:
            type: number
    properties:
      expression: x-1
  # Found (eval)
  found:
    operator: slang.eval
    generics:
      paramsMap:
        type: map
        map:
          x:
            type: number
    properties:
      expression: x==0
  # Iterator (agg)
  iter:
    operator: slang.aggregate
    generics:
      itemType:
        type: number
      stateType:
        type: map
        map:
          index:
            type: number
          item:
            type: number
  # Switch (merge)
  switch:
    operator: slang.syncMerge
    generics:
      itemType:
        type: number
  filter:
    operator: slang.fork
    generics:
      itemType:
        type: number

connections:
  items(:
    - items(iter
  index(:
    - (default
    - init.index(iter
  default):
    - init.item(iter
  iter.iteration)~.item:
    - true(switch
    - ~.item(filter
  iter.iteration)~.state.item:
    - false(switch
  iter.iteration)~.state.index:
    - x(minusOne
    - x(found
  found):
    - select(switch
    - ~.select(filter
  minusOne):
    - ~.index(iter.iteration
  switch):
    - ~.item(iter.iteration
  filter)false.~:
    - )others.~
  iter)item:
    - )item
