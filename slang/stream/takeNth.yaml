services:
  main:
    in:
      type: map
      map:
        index:
          type: number
        items:
          type: stream
          stream:
            type: generic
            generic: itemType
    out:
      type: map
      map:
        item:
          type: generic
          generic: itemType
        others:
          type: stream
          stream:
            type: generic
            generic: itemType
operators:
  default:
    operator: slang.const
    properties:
      value: $default
    generics:
      valueType:
        type: generic
        generic: itemType
  filter:
    operator: slang.fork
    generics:
      itemType:
        type: generic
        generic: itemType
  found:
    operator: slang.eval
    properties:
      expression: x==0
      variables:
      - x
  iter:
    operator: slang.aggregate
    generics:
      itemType:
        type: generic
        generic: itemType
      stateType:
        type: map
        map:
          index:
            type: number
          item:
            type: generic
            generic: itemType
  minusOne:
    operator: slang.eval
    properties:
      expression: x-1
      variables:
      - x
  switch:
    operator: slang.syncMerge
    generics:
      itemType:
        type: generic
        generic: itemType
properties:
  default:
    type: generic
    generic: itemType
connections:
  default):
  - init.item(iter
  filter)false.~:
  - )others.~
  found):
  - select(switch
  - ~.select(filter
  index(:
  - (default
  - init.index(iter
  items(:
  - items(iter
  iter)item:
  - )item
  iter.iteration)~.item:
  - true(switch
  - ~.item(filter
  iter.iteration)~.state.index:
  - x(minusOne
  - x(found
  iter.iteration)~.state.item:
  - false(switch
  minusOne):
  - ~.index(iter.iteration
  switch):
  - ~.item(iter.iteration
