connections:
  (:
  - item(Loop
  - (Value
  Loop)items.~:
  - )~
  Loop.controller)first:
  - (Loop.controller
  Loop.iterator)first:
  - (Value1
  Loop.iterator)item:
  - item(Loop.iterator
  - state.item(Loop.iterator
  Value):
  - first(Loop
  Value1):
  - state.first(Loop.iterator
geometry:
  size:
    height: 400
    width: 520
id: 1aa54f7c-67c5-448e-a2ff-1aefe4a616dd
meta:
  description: ''
  docUrl: https://bitspark.de/slang/docs/operator/wrap-item
  icon: cube
  name: wrap item
  shortDescription: creates stream containing one single generic item
  tags:
  - stream
operators:
  Loop:
    generics:
      itemType:
        generic: itemType
        type: generic
      stateType:
        map:
          first:
            type: boolean
          item:
            generic: itemType
            type: generic
        type: map
    geometry:
      position:
        x: -10
        y: 109.5
    operator: 0b8a1592-1368-44bc-92d5-692acc78b1d3
  Value:
    generics:
      valueType:
        type: boolean
    geometry:
      position:
        x: -20
        y: -57.5
    operator: 8b62495a-e482-4a3e-8020-0ab8a350ad2d
    properties:
      value: true
  Value1:
    generics:
      valueType:
        type: boolean
    geometry:
      position:
        x: -220
        y: 97.5
    operator: 8b62495a-e482-4a3e-8020-0ab8a350ad2d
    properties:
      value: false
services:
  main:
    geometry:
      in:
        position: 5
      out:
        position: -25
    in:
      generic: itemType
      type: generic
    out:
      stream:
        generic: itemType
        type: generic
      type: stream
tests:
- data:
    in:
    - a
    - test
    - ''
    out:
    - - a
    - - test
    - - ''
  description: wraps strings
  generics:
    itemType:
      type: string
  name: Wraps strings
  properties: {}
- data:
    in:
    - 2
    - -6.5
    - 0
    out:
    - - 2
    - - -6.5
    - - 0
  description: wraps numbers
  generics:
    itemType:
      type: number
  name: Wraps number
  properties: {}

