services:
  main:
    in:
      type: map
      map:
        delegateInit:
          type: generic
          generic: itemType
        stateInit:
          type: generic
          generic: stateType
    out:
      type: map
      map:
        delegateEnd:
          type: stream
          stream:
            type: generic
            generic: valueType
        stateEnd:
          type: generic
          generic: stateType
        values:
          type: stream
          stream:
            type: generic
            generic: valueType
delegates:
  delegate:
    in:
      type: stream
      stream:
        type: map
        map:
          continue:
            type: boolean
          delegateEnd:
            type: generic
            generic: outType
          state:
            type: generic
            generic: stateType
          value:
            type: generic
            generic: valueType
    out:
      type: map
      map:
        delegateInit:
          type: generic
          generic: inType
        loop:
          type: stream
          stream:
            type: generic
            generic: stateType
operators:
  loop:
    operator: slang.loop
    generics:
      stateType:
        type: generic
        generic: stateType
connections:
  ~.continue(.delegate:
  - ~.continue(loop.iteration
  ~.delegateEnd(.delegate:
  - )delegateEnd.~
  ~.state(.delegate:
  - ~.state(loop.iteration
  ~.value(.delegate:
  - )values.~
  delegateInit(:
  - .delegate)delegateInit
  loop):
  - )stateEnd
  loop.iteration):
  - .delegate)loop
  stateInit(:
  - (loop
