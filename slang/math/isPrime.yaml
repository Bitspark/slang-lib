services:
  main:
    in:
      type: number
    out:
      type: boolean
operators:
  const:
    operator: slang.const
    properties:
      value: 1
    generics:
      valueType:
        type: number
  const1:
    operator: slang.const
    properties:
      value: 2
    generics:
      valueType:
        type: number
  const2:
    operator: slang.const
    properties:
      value: true
    generics:
      valueType:
        type: boolean
  eval:
    operator: slang.eval
    properties:
      expression: a%b==0
      variables:
      - a
      - b
  eval1:
    operator: slang.eval
    properties:
      expression: x-1
      variables:
      - x
  eval2:
    operator: slang.eval
    properties:
      expression: x!=2
      variables:
      - x
  generate:
    operator: slang.stream.generate
  not:
    operator: slang.logic.not
  or:
    operator: slang.logic.or
  reduce:
    operator: slang.reduce
    properties:
      emptyValue: true
    generics:
      itemType:
        type: boolean
  repeat:
    operator: slang.stream.repeat
    generics:
      itemType:
        type: number
  switch:
    operator: slang.switch
    properties:
      cases:
      - true
      - false
    generics:
      inType:
        type: number
      outType:
        type: boolean
      selectType:
        type: boolean
connections:
  (:
  - item(switch
  - x(eval2
  const):
  - step(generate
  const1):
  - start(generate
  const2):
  - (switch.false
  eval):
  - ~(reduce
  eval1):
  - end(generate
  eval2):
  - select(switch
  generate):
  - triggers(repeat
  generate)~:
  - b(eval
  not):
  - (switch.true
  or):
  - ~(reduce.selection
  reduce):
  - (not
  reduce.selection)~:
  - (or
  repeat)~:
  - a(eval
  switch):
  - )
  switch.false):
  - (const2
  switch.true):
  - value(repeat
  - x(eval1
  - (const1
  - (const
