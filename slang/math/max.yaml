services:
  main:
    in:
      type: stream
      stream:
        type: number
    out:
      type: number
operators:
  aggregate:
    operator: slang.aggregate
    generics:
      itemType:
        type: number
      stateType:
        type: number
  const:
    operator: slang.const
    properties:
      value: $startValue
    generics:
      valueType:
        type: number
  eval:
    operator: slang.eval
    properties:
      expression: a>b
      variables:
      - a
      - b
  syncMerge:
    operator: slang.syncMerge
    generics:
      itemType:
        type: number
properties:
  startValue:
    type: number
connections:
  (:
  - (const
  ~(:
  - items.~(aggregate
  aggregate):
  - )
  aggregate.iteration)~.item:
  - a(eval
  - true(syncMerge
  aggregate.iteration)~.state:
  - b(eval
  - false(syncMerge
  const):
  - init(aggregate
  eval):
  - select(syncMerge
  syncMerge):
  - ~(aggregate.iteration
